name: DevSecOps CI/CD pipeline to Azure

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build_and_scan:
    name: Scan & Quality Gate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'app/package.json'

      # ติดตั้ง sonar-scanner globally เพื่อให้คำสั่ง npm run sonar ใช้งานได้
      - name: Install Global Sonar Scanner
        run: npm install -g sonar-scanner

      # คำสั่งนี้จะใช้ 'jest --coverage' จาก package.json เพื่อสร้าง app/coverage/lcov.info
      - name: Run Unit Tests and Generate Coverage Report (LCOV)
        run: npx jest --coverage --config app/package.json --forceExit
          
      - name: Install App Dependencies
        run: npm install --prefix app

        # 1. รัน SonarQube Scan
      - name: SonarQube Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          # ใช้ sonar-scanner ที่ติดตั้งไว้ global
          sonar-scanner \
            -Dsonar.projectKey=jarot571_devsecops-solution \
            -Dsonar.organization=jarot571 \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.sources=app \
            -Dsonar.javascript.lcov.reportPaths=app/coverage/lcov.info \
            -Dsonar.coverage.exclusions=app/index.js

      - name: Deley to ensure Quality Gate Status is ready
        run : echo "waiting for 30 second for SonarQube processing.." && sleep 20s

      - name: Check SonarQube Quality Gate Status
        id: wait_and_check
        uses: actions/github-script@v7
        with:
          script: |
            const { checkQualityGate } = require('./.github/workflows/sonar-check-script.js');
            // ส่งค่า Secrets ไปให้ script ใช้โดยตรง
            await checkQualityGate({
              github, 
              core, 
              fetch,
              projectKey: 'jarot571_devsecops-solution'
            });
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}   
 